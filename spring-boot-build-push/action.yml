name: "Build Spring Boot App"
description: "Build Spring Boot App"
inputs:
  checkout:
    description: "If Checkout the repository"
    required: true
    default: true
  username:
    description: "Username from secrets"
    required: true
  user-token:
    description: "User token from secrets"
    required: true
  module-directory:
    description: "For one repo, the directory of module. By default ./"
    required: true
    default: "./"
  docker-image-name:
    description: "The name of the docker image"
    required: true
  docker-repository-name:
    description: "The name of docker repository. By default loga-engineering/loga-docker-images"
    required: true
    default: "loga-engineering/loga-docker-images"
  docker-tag-version:
    description: "The tag version for docker image"
    required: true
  java-version:
    description: "The Java version."
    required: true
    default: 21
  java-distribution:
    description: "The Java distribution."
    required: true
    default: "adopt"
  docker-registry:
    description: "The docker registry to push image. By default ghcr.io"
    required: true
    default: "ghcr.io"
  push:
    description: "If push docker image"
    required: true
    default: true

runs:
  using: "composite"
  steps:
    - name: "Checkout the repository"
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        server-id: github
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Build Server
      shell: bash
      run: mvn -f ${{ inputs.module-directory }}/ package
      env:
        MAVEN_USERNAME: ${{ inputs.username }}
        MAVEN_PASSWORD: ${{ inputs.user-token }}

    - name: "Build and Push Docker Image"
      uses: loga-engineering/actions/docker-build-push@v0.0.7
      with:
        username: ${{ inputs.username }}
        user-token: ${{ inputs.user-token }}
        docker-registry: ${{ inputs.docker-registry }}
        module-directory: ${{ inputs.module-directory }}
        docker-image-name: ${{ inputs.docker-image-name }}
        docker-tag-version: ${{ inputs.docker-tag-version }}
        docker-repository-name: ${{ inputs.docker-repository-name }}
        push: ${{ inputs.push }}

